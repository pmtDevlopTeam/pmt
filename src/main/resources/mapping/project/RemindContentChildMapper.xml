<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.camelot.pmt.project.mapper.RemindContentChildMapper" >
  <resultMap id="BaseResultMap" type="RemindContentChild" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="content_id" property="contentId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="method_url" property="methodUrl" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="delay_remind_days" property="delayRemindDays" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="INTEGER" />
    <result column="project_role_id" property="projectRoleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, content_id, name, code, method_url, create_user_id, create_time, 
    delay_remind_days, remark,project_role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from remind_content_child
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from remind_content_child
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="RemindContentChild" useGeneratedKeys="true" keyProperty="id">
    insert into remind_content_child (id, project_id, content_id, 
      name, code, method_url, 
      create_user_id, create_time, delay_remind_days, 
      remark,project_role_id)
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{contentId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{methodUrl,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{delayRemindDays,jdbcType=INTEGER}, 
      #{remark,jdbcType=INTEGER},#{projectRoleId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="RemindContentChild" useGeneratedKeys="true" keyProperty="id">
    insert into remind_content_child
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="methodUrl != null" >
        method_url,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="delayRemindDays != null" >
        delay_remind_days,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="projectRoleId != null" >
        project_role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="methodUrl != null" >
        #{methodUrl,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delayRemindDays != null" >
        #{delayRemindDays,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=INTEGER},
      </if>
      <if test="projectRoleId != null" >
        #{projectRoleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="RemindContentChild" >
    update remind_content_child
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="contentId != null" >
        content_id = #{contentId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="methodUrl != null" >
        method_url = #{methodUrl,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delayRemindDays != null" >
        delay_remind_days = #{delayRemindDays,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=INTEGER},
      </if>
      <if test="projectRoleId != null" >
        project_role_id = #{projectRoleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="RemindContentChild" >
    update remind_content_child
    set project_id = #{projectId,jdbcType=BIGINT},
      content_id = #{contentId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      method_url = #{methodUrl,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delay_remind_days = #{delayRemindDays,jdbcType=INTEGER},
      remark = #{remark,jdbcType=INTEGER},
      project_role_id = #{projectRoleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 根据项目id删除提醒内容子表 -->
  <delete id="deleteByProjectId" parameterType="java.lang.Long">
  	delete from remind_content_child
    where project_id = #{projectId,jdbcType=BIGINT}
  </delete>
  <!-- 根据提醒内容id查询子内容信息 -->
  <select id="queryByContentId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select 
    <include refid="Base_Column_List" />
    from remind_content_child
    where content_id = #{contentId,jdbcType=BIGINT}
  </select>
  <!-- 批量根据内容id删除子内容 -->
  <delete id="deleteByContentId" parameterType="java.lang.Long">
  	delete from remind_content_child where 
    <foreach collection="list" open="(" close=")" separator="or" item="item">
		content_id = #{item.contentId,jdbcType=BIGINT}
	</foreach>
  </delete>
  <!-- 根据项目id、提醒内容id查询子内容信息 -->
  <select id="queryByProjectIdAndByContentId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from remind_content_child
    where project_id = #{projectId,jdbcType=BIGINT}
    and content_id = #{contentId,jdbcType=BIGINT}
  </select>
</mapper>