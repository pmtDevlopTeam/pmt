<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.camelot.pmt.project.mapper.VersionMapper" >
  <resultMap id="BaseResultMap" type="com.camelot.pmt.project.model.Version" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="version_type" property="versionType" jdbcType="VARCHAR" />
    <result column="version_name" property="versionName" jdbcType="VARCHAR" />
    <result column="version_code" property="versionCode" jdbcType="VARCHAR" />
    <result column="version_status" property="versionStatus" jdbcType="INTEGER" />
    <result column="version_repository_url" property="versionRepositoryUrl" jdbcType="VARCHAR" />
    <result column="version_repository_branch" property="versionRepositoryBranch" jdbcType="VARCHAR" />
    <result column="version_repository_id" property="versionRepositoryId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_user_id" property="modifyUserId" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.camelot.pmt.project.model.Version" extends="BaseResultMap" >
    <result column="remarks" property="remarks" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, version_type, version_name, version_code, version_status, version_repository_url,
    version_repository_branch, version_repository_id, start_time, end_time, create_user_id,
    create_time, modify_user_id, modify_time
  </sql>
  <sql id="Blob_Column_List" >
    remarks
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from version
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from version
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.camelot.pmt.project.model.Version" >
    insert into version (id, project_id, version_type,
    version_name, version_code, version_status,
    version_repository_url, version_repository_branch,
    version_repository_id, start_time, end_time,
    create_user_id, create_time, modify_user_id,
    modify_time, remarks)
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{versionType,jdbcType=VARCHAR},
    #{versionName,jdbcType=VARCHAR}, #{versionCode,jdbcType=VARCHAR}, #{versionStatus,jdbcType=INTEGER},
    #{versionRepositoryUrl,jdbcType=VARCHAR}, #{versionRepositoryBranch,jdbcType=VARCHAR},
    #{versionRepositoryId,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
    #{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyUserId,jdbcType=VARCHAR},
    #{modifyTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.camelot.pmt.project.model.Version" >
    insert into version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="versionType != null" >
        version_type,
      </if>
      <if test="versionName != null" >
        version_name,
      </if>
      <if test="versionCode != null" >
        version_code,
      </if>
      <if test="versionStatus != null" >
        version_status,
      </if>
      <if test="versionRepositoryUrl != null" >
        version_repository_url,
      </if>
      <if test="versionRepositoryBranch != null" >
        version_repository_branch,
      </if>
      <if test="versionRepositoryId != null" >
        version_repository_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyUserId != null" >
        modify_user_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="versionType != null" >
        #{versionType,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null" >
        #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="versionCode != null" >
        #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="versionStatus != null" >
        #{versionStatus,jdbcType=INTEGER},
      </if>
      <if test="versionRepositoryUrl != null" >
        #{versionRepositoryUrl,jdbcType=VARCHAR},
      </if>
      <if test="versionRepositoryBranch != null" >
        #{versionRepositoryBranch,jdbcType=VARCHAR},
      </if>
      <if test="versionRepositoryId != null" >
        #{versionRepositoryId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.camelot.pmt.project.model.Version" >
    update version
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="versionType != null" >
        version_type = #{versionType,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null" >
        version_name = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="versionCode != null" >
        version_code = #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="versionStatus != null" >
        version_status = #{versionStatus,jdbcType=INTEGER},
      </if>
      <if test="versionRepositoryUrl != null" >
        version_repository_url = #{versionRepositoryUrl,jdbcType=VARCHAR},
      </if>
      <if test="versionRepositoryBranch != null" >
        version_repository_branch = #{versionRepositoryBranch,jdbcType=VARCHAR},
      </if>
      <if test="versionRepositoryId != null" >
        version_repository_id = #{versionRepositoryId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.camelot.pmt.project.model.Version" >
    update version
    set project_id = #{projectId,jdbcType=BIGINT},
    version_type = #{versionType,jdbcType=VARCHAR},
    version_name = #{versionName,jdbcType=VARCHAR},
    version_code = #{versionCode,jdbcType=VARCHAR},
    version_status = #{versionStatus,jdbcType=INTEGER},
    version_repository_url = #{versionRepositoryUrl,jdbcType=VARCHAR},
    version_repository_branch = #{versionRepositoryBranch,jdbcType=VARCHAR},
    version_repository_id = #{versionRepositoryId,jdbcType=VARCHAR},
    start_time = #{startTime,jdbcType=TIMESTAMP},
    end_time = #{endTime,jdbcType=TIMESTAMP},
    create_user_id = #{createUserId,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
    modify_time = #{modifyTime,jdbcType=TIMESTAMP},
    remarks = #{remarks,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.camelot.pmt.project.model.Version" >
    update version
    set project_id = #{projectId,jdbcType=BIGINT},
      version_type = #{versionType,jdbcType=VARCHAR},
      version_name = #{versionName,jdbcType=VARCHAR},
      version_code = #{versionCode,jdbcType=VARCHAR},
      version_status = #{versionStatus,jdbcType=INTEGER},
      version_repository_url = #{versionRepositoryUrl,jdbcType=VARCHAR},
      version_repository_branch = #{versionRepositoryBranch,jdbcType=VARCHAR},
      version_repository_id = #{versionRepositoryId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectVersionListByProIdAndPram" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    FROM version
    WHERE project_id = #{projectId}
    <if test="versionVo.versionName != null">
      and version_name like #{versionVo.versionName}
    </if>
    <if test="versionVo.versionCode != null">
      and version = #{versionVo.versionCode}
    </if>
    <if test="versionVo.versionType != null">
      and version_type = #{versionVo.versionType}
    </if>
    and version_status=0 ORDER BY create_time DESC
  </select>
  <select id="queryListByProIdAndVerType" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    FROM version
    WHERE project_id = #{projectId}
    AND version_type=#{versionType} and version_status=0 ORDER BY create_time DESC
  </select>
  <select id="selectList" resultMap="BaseResultMap" >
    SELECT
    <include refid="Base_Column_List" />
    FROM version
    ORDER BY id ASC
  </select>
  <select id="selectVerListByProIdAndVerCode" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    FROM version
    WHERE project_id = #{projectId}
    AND version_code=#{versionCode} and version_status=0 ORDER BY create_time DESC
  </select>
</mapper>