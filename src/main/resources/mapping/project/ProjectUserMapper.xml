<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.camelot.pmt.project.mapper.ProjectUserMapper">
	<!--根据项目id更新项目成员状态 -->
	<update id="updateUserStatusByProjectId">
		update project_user
		<trim prefix="set" suffixOverrides=",">
			<if test="realOutTime != null">
				real_out_time = #{realOutTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=CHAR},
			</if>
			<if test="modifyUserId != null">
				modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP}
			</if>
		</trim>
		where project_id =#{projectId,jdbcType=BIGINT}
	</update>
	<!-- 返回封装数据 -->
	<resultMap id="BaseResultMap" type="com.camelot.pmt.project.model.ProjectUser">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="project_id" property="projectId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="pre_join_time" property="preJoinTime" jdbcType="TIMESTAMP" />
		<result column="real_join_time" property="realJoinTime"
			jdbcType="TIMESTAMP" />
		<result column="pre_out_time" property="preOutTime" jdbcType="TIMESTAMP" />
		<result column="real_out_time" property="realOutTime" jdbcType="TIMESTAMP" />
		<result column="pre_man_hour" property="preManHour" jdbcType="INTEGER" />
		<result column="user_status" property="userStatus" jdbcType="CHAR" />
		<result column="user_pro_role" property="userProRole" jdbcType="VARCHAR" />
		<result column="create_user_id" property="createUserId"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_user_id" property="modifyUserId"
			jdbcType="VARCHAR" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- base_column_list -->
	<sql id="Base_Column_List">
		id, project_id, user_id, pre_join_time, real_join_time,
		pre_out_time,
		real_out_time,
		pre_man_hour, user_status, user_pro_role,
		create_user_id, create_time,
		modify_user_id,
		modify_time
	</sql>

	<!-- 通过主键查询 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from project_user
		where id = #{id,jdbcType=BIGINT}
	</select>

	<!-- 插入数据 -->
	<insert id="insert" parameterType="com.camelot.pmt.project.model.ProjectUser">
		insert into project_user (id,
		project_id, user_id,
		pre_join_time, real_join_time, pre_out_time,
		real_out_time, pre_man_hour, user_status,
		user_pro_role,
		create_user_id, create_time,
		modify_user_id, modify_time)
		values
		(#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT},
		#{userId,jdbcType=VARCHAR},
		#{preJoinTime,jdbcType=TIMESTAMP},
		#{realJoinTime,jdbcType=TIMESTAMP}, #{preOutTime,jdbcType=TIMESTAMP},
		#{realOutTime,jdbcType=TIMESTAMP}, #{preManHour,jdbcType=INTEGER},
		#{userStatus,jdbcType=CHAR},
		#{userProRole,jdbcType=VARCHAR},
		#{createUserId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{modifyUserId,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP})
	</insert>

	<!-- 添加用户 -->
	<insert id="addUserSelective" parameterType="com.camelot.pmt.project.model.ProjectUser">
		insert into project_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="projectId != null">
				project_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="preJoinTime != null">
				pre_join_time,
			</if>
			<if test="realJoinTime != null">
				real_join_time,
			</if>
			<if test="preOutTime != null">
				pre_out_time,
			</if>
			<if test="realOutTime != null">
				real_out_time,
			</if>
			<if test="preManHour != null">
				pre_man_hour,
			</if>
			<if test="userStatus != null">
				user_status,
			</if>
			<if test="userProRole != null">
				user_pro_role,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyUserId != null">
				modify_user_id,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="projectId != null">
				#{projectId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="preJoinTime != null">
				#{preJoinTime,jdbcType=TIMESTAMP},
			</if>
			<if test="realJoinTime != null">
				#{realJoinTime,jdbcType=TIMESTAMP},
			</if>
			<if test="preOutTime != null">
				#{preOutTime,jdbcType=TIMESTAMP},
			</if>
			<if test="realOutTime != null">
				#{realOutTime,jdbcType=TIMESTAMP},
			</if>
			<if test="preManHour != null">
				#{preManHour,jdbcType=INTEGER},
			</if>
			<if test="userStatus != null">
				#{userStatus,jdbcType=CHAR},
			</if>
			<if test="userProRole != null">
				#{userProRole,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyUserId != null">
				#{modifyUserId,jdbcType=VARCHAR},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<!-- 通过主键删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		project_user
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<!--根据项目id更新项目成员状态 -->
	<update id="updateUserStatusByProjectId">
		update project_user set
		real_out_time =
		#{realOutTime}, user_status =
		#{userStatus},
		modify_user_id =
		#{modifyUserId}, modify_time =
		#{modifyTime}
		where project_id =
		#{projectId}
	</update>

	<!-- 修改用户 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.camelot.pmt.project.model.ProjectUser">
		update project_user
		<set>
			<if test="projectId != null">
				project_id = #{projectId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="preJoinTime != null">
				pre_join_time = #{preJoinTime,jdbcType=TIMESTAMP},
			</if>
			<if test="realJoinTime != null">
				real_join_time = #{realJoinTime,jdbcType=TIMESTAMP},
			</if>
			<if test="preOutTime != null">
				pre_out_time = #{preOutTime,jdbcType=TIMESTAMP},
			</if>
			<if test="realOutTime != null">
				real_out_time = #{realOutTime,jdbcType=TIMESTAMP},
			</if>
			<if test="preManHour != null">
				pre_man_hour = #{preManHour,jdbcType=INTEGER},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=CHAR},
			</if>
			<if test="userProRole != null">
				user_pro_role = #{userProRole,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyUserId != null">
				modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 通过id修改用户 -->
	<update id="updateByPrimaryKey" parameterType="com.camelot.pmt.project.model.ProjectUser">
		update
		project_user
		set project_id = #{projectId,jdbcType=BIGINT},
		user_id =
		#{userId,jdbcType=VARCHAR},
		pre_join_time =
		#{preJoinTime,jdbcType=TIMESTAMP},
		real_join_time =
		#{realJoinTime,jdbcType=TIMESTAMP},
		pre_out_time =
		#{preOutTime,jdbcType=TIMESTAMP},
		real_out_time =
		#{realOutTime,jdbcType=TIMESTAMP},
		pre_man_hour =
		#{preManHour,jdbcType=INTEGER},
		user_status =
		#{userStatus,jdbcType=CHAR},
		user_pro_role =
		#{userProRole,jdbcType=VARCHAR},
		create_user_id =
		#{createUserId,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		modify_user_id =
		#{modifyUserId,jdbcType=VARCHAR},
		modify_time =
		#{modifyTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 确认成员入项目 -->
	<update id="confirmUser" parameterType="com.camelot.pmt.project.model.ProjectUser">
		update project_user set
		real_join_time = #{realJoinTime}, user_status =
		#{userStatus},
		modify_user_id = #{modifyUserId}, modify_time =
		#{modifyTime}
		where id =
		#{id}
	</update>

	<!-- 移出成员 -->
	<update id="clearUser" parameterType="java.util.Map">
		update project_user set user_status = #{userStatus}, real_out_time =
		#{realOutTime},
		modify_user_id = #{operator}, modify_time =
		#{modifyTime}
		where project_user.project_id = #{projectId}
		and
		project_user.user_id in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>

	<!-- 移出所有成员 -->
	<update id="clearUserAll">
		update project_user set user_status = #{user_status},
		create_user_id = #{userId}, modify_time = now(), real_out_time = now()
		where project_user.project_id = #{projectId}
	</update>

	<!-- 基本返回数据类型 -->
	<resultMap id="projectUserMap" type="com.camelot.pmt.project.model.ProjectUserShow">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="project_id" property="projectId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="pre_join_time" property="preJoinTime" jdbcType="TIMESTAMP" />
		<result column="real_join_time" property="realJoinTime"
			jdbcType="TIMESTAMP" />
		<result column="pre_out_time" property="preOutTime" jdbcType="TIMESTAMP" />
		<result column="real_out_time" property="realOutTime" jdbcType="TIMESTAMP" />
		<result column="pre_man_hour" property="preManHour" jdbcType="INTEGER" />
		<result column="user_status" property="userStatus" jdbcType="CHAR" />
		<result column="user_job_num" property="userJobNum" jdbcType="VARCHAR" />
		<result column="user_pro_role" property="userProRole" jdbcType="VARCHAR" />
		<result column="pro_role_name" property="userProRoleName"
			jdbcType="VARCHAR" />
		<collection property="userRoleNames" ofType="java.lang.String">
			<result column="user_role_names" property="userRoleName" />
		</collection>
	</resultMap>

	<!-- 通过项目id查询所有成员 -->
	<select id="searchUserByProjectId" parameterType="java.lang.Long"
		resultMap="projectUserMap">
		SELECT project_user.id, project_user.project_id,
		project_user.user_id, platform_user_info.user_job_num,
		project_user.user_pro_role,
		platform_user.user_name,
		project_user.pre_join_time,
		project_user.real_join_time,
		project_user.pre_out_time,
		project_user.real_out_time,
		project_user.pre_man_hour, project_user.user_status, pr1.role_name AS
		pro_role_name, pr2.role_name AS
		user_role_names
		FROM project_user
		LEFT
		JOIN platform_user ON project_user.user_id = platform_user.user_id
		LEFT JOIN platform_role pr1 ON project_user.user_pro_role =
		pr1.role_id
		LEFT JOIN platform_user_role ON platform_user_role.user_id
		=
		project_user.user_id
		LEFT JOIN platform_role pr2 ON pr2.role_id =
		platform_user_role.role_id
		LEFT JOIN platform_user_info ON
		platform_user_info.user_id = project_user.user_id
		WHERE
		project_user.project_id = #{projectId}
	</select>

	<!-- 条件查询 -->
	<select id="searchUserByCondition" parameterType="com.camelot.pmt.project.model.ProjectUserSearchVO"
		resultMap="projectUserMap">
		SELECT project_user.id, project_user.project_id, project_user.user_id,
		platform_user_info.user_job_num,
		project_user.user_pro_role,
		platform_user.user_name, project_user.pre_join_time,
		project_user.real_join_time, project_user.pre_out_time,
		project_user.real_out_time,
		project_user.pre_man_hour,
		project_user.user_status, pr1.role_name AS pro_role_name,
		pr2.role_name AS
		user_role_names
		FROM project_user
		LEFT JOIN
		platform_user ON project_user.user_id = platform_user.user_id
		LEFT JOIN
		platform_role pr1 ON project_user.user_pro_role =
		pr1.role_id
		LEFT JOIN
		platform_user_role ON platform_user_role.user_id =
		project_user.user_id
		LEFT JOIN platform_role pr2 ON pr2.role_id =
		platform_user_role.role_id
		LEFT JOIN platform_user_info ON
		platform_user_info.user_id = project_user.user_id
		WHERE
		project_user.project_id = #{projectId}
		<if test="userName != null">
			AND platform_user.user_name like concat(concat('%',
			#{userName}), '%')
		</if>
		<if test="userStatus != null">
			AND project_user.user_status = #{userStatus}
		</if>
		<if test="userProRoleIds != null">
			AND project_user.user_pro_role = #{userProRoleIds}
		</if>
		<if test="roleId != null">
			AND pr2.role_id = #{roleId}
		</if>
		<if test="page != null">
			limit #{page}, #{size}
		</if>
	</select>

	<!-- 查询总数 -->
	<select id="count" parameterType="com.camelot.pmt.project.model.ProjectUserSearchVO"
		resultType="java.lang.Integer">
		select count(1) from (
		SELECT project_user.user_id
		FROM project_user
		LEFT JOIN platform_user ON project_user.user_id =
		platform_user.user_id
		LEFT JOIN platform_role pr1 ON
		project_user.user_pro_role =
		pr1.role_id
		LEFT JOIN platform_user_role ON
		platform_user_role.user_id =
		project_user.user_id
		LEFT JOIN
		platform_role pr2 ON pr2.role_id = platform_user_role.role_id
		LEFT JOIN
		platform_user_info ON platform_user_info.user_id =
		project_user.user_id
		WHERE project_user.project_id = #{projectId}
		<if test="userName != null">
			AND platform_user.user_name like concat(concat('%',
			#{userName}), '%')
		</if>
		<if test="userStatus != null">
			AND project_user.user_status = #{userStatus}
		</if>
		<if test="roleId != null">
			AND project_user.user_pro_role = #{roleId}
		</if>
		<if test="userProRoleIds != null">
			AND pr2.role_id = #{userProRoleIds}
		</if>
		group by project_user.user_id) temps
	</select>


	<!-- 查询是否还有未完成的任务 -->
	<select id="checkTask" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from
		task where task.project_id = #{projectId}
		and
		task.status in (0, 1, 3) and
		task.beassign_user_id in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>

	<!-- 查询是否还有未改完的bug -->
	<select id="checkBug" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1)
		from bug_manage
		where project_id=#{projectId} and
		designated_id in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item}
		</foreach>
		and bug_status in(0,1)
	</select>

</mapper>