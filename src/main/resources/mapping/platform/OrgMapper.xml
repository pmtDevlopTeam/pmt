<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.camelot.pmt.platform.mapper.OrgMapper" >
    <resultMap id="BaseResultMap" type="com.camelot.pmt.platform.model.Org" >
        <id column="id" property="id"/>
        <result column="org_id" property="orgId"/>
        <result column="parent_id" property="parentId"/>
        <result column="org_name" property="orgname"/>
        <result column="org_code" property="orgCode"/>
        <result column="state" property="state"/>
        <result column="sort_num" property="sortNum"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="create_user_id" property="creatUserId"/>
        <result column="modify_user_id" property="modifyUserId"/>
    </resultMap>
    <resultMap id="OrgAndUserresultMap" type="com.camelot.pmt.platform.model.OrgAndUser" >
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="org_id" property="orgId"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="modify_user_id" property="modifyUserId"/>
    </resultMap>
    
    <resultMap id="ResultMap" type="com.camelot.pmt.platform.model.OrgToUser" >
        <id column="id" property="id"/>
        <result column="orgId" property="orgId"/>
        <result column="orgName" property="orgname"/>
        <result column="parentId" property="parentId"/>
        <result column="orgCode" property="orgCode"/>
        <result column="states" property="state"/>
        <result column="orgParentName" property="orgParentName"/>
        <result column="creatTime" property="createTime"/>
        <collection property="userList" ofType="com.camelot.pmt.platform.model.User">
        	 <id column="id" property="id"/>
        	 <result column="username" property="username"/>
             <result column="userId" property="userId"/>
        </collection>
        
    </resultMap>
    <!-- <resultMap id="ResultMaps" type="com.camelot.pmt.platform.model.OrgToUser" >
        <id column="id" property="id"/>
        <result column="orgId" property="orgId"/>
        <result column="orgName" property="orgname"/>
        <result column="orgCode" property="orgCode"/>
        <result column="states" property="state"/>
        <result column="orgParentName" property="orgParentName"/>
        <result column="creatTime" property="createTime"/>
        <association property="user" javaType="com.camelot.pmt.platform.model.User">
        	 <id column="id" property="id"/>
        	 <result column="username" property="username"/>
             <result column="userId" property="userId"/>
        </association>
    </resultMap> -->
    <select id="selectOrgsDetail" resultMap="ResultMap"  >
		SELECT			       
				t.orgName,
				t.orgCode,
				puo.user_id AS userId,
				t.orgId,
				t.orgParentName,
				pu.user_name AS username,
			    t.states,
			    t.createTime,
			    t.parentId
			FROM
				(
					SELECT
						p.org_name AS orgName,
						p.org_code AS orgCode,
						o.org_name AS orgParentName,
						p.org_id AS orgId,
			            p.state AS states,
			            p.create_time AS createTime,
			            p.parent_id AS parentId
					FROM
						platform_org p
					 LEFT JOIN platform_org o ON p.parent_id = o.org_id
				) t
			 LEFT JOIN platform_user_org puo ON t.orgId = puo.org_id
			LEFT JOIN platform_user pu ON pu.user_id = puo.user_id
			
    </select>
    <select id="selectOrgsDetailByOrgId" resultMap="ResultMap"  >
		SELECT			       
				t.orgName,
				t.orgCode,
				puo.user_id AS userId,
				t.orgId,
				t.orgParentName,
				pu.user_name AS username,
			    t.states,
			    t.createTime,
			    t.parentId
			FROM
				(
					SELECT
						p.org_name AS orgName,
						p.org_code AS orgCode,
						o.org_name AS orgParentName,
						p.org_id AS orgId,
			            p.state AS states,
			            p.create_time AS createTime,
			            p.parent_id AS parentId
					FROM
						platform_org p
					 LEFT JOIN platform_org o ON p.parent_id = o.org_id
				) t
			 LEFT JOIN platform_user_org puo ON t.orgId = puo.org_id
			LEFT JOIN platform_user pu ON pu.user_id = puo.user_id
			where t.orgId=#{orgId}
    </select>
    
    <sql id="Base_Column_List" >
        id,parent_id,org_id,org_name,state,create_time,modify_time,sort_num,org_code,create_user_id,modify_user_id
    </sql>
    
    <sql id="add_Column_List" >
        <trim suffixOverrides=",">
            <if test="orgId != null">org_id,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="orgname != null">org_name,</if>
            <if test="state != null">state,</if>
            <if test="createTime != null">create_time,</if>
            <if test="modifyTime != null">modify_time,</if>
            <if test="sortNum != null">sort_num,</if>
            <if test="orgCode != null">org_code,</if>
            <if test="creatUserId != null">create_user_id,</if>
            <if test="modifyUserId != null">modify_user_id</if>
        </trim>
    </sql>

    <sql id="sql_add_properties">
        <trim suffixOverrides=",">
            <if test="orgId != null">#{orgId},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="orgname != null">#{orgname},</if>
            <if test="state != null">#{state},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="modifyTime != null">#{modifyTime},</if>
            <if test="sortNum != null">#{sortNum},</if>
            <if test="orgCode != null">#{orgCode},</if>
            <if test="creatUserId != null">#{creatUserId},</if>
            <if test="modifyUserId != null">#{modifyUserId}</if>
        </trim>
    </sql>
    
    <insert id="createOrg" parameterType="Org" useGeneratedKeys="true" keyProperty="id"  >
        INSERT INTO platform_org(
            <include refid="add_Column_List"/>
            ) VALUES (
            <include refid="sql_add_properties"/>
        )
    </insert>
     
     <insert id="createOrgToUser" parameterType="Org" useGeneratedKeys="true" keyProperty="id"  >
        INSERT INTO platform_user_org(
            id,user_id,org_id,create_time,modify_time,create_user_id,modify_user_id
            ) VALUES (
            #{id},#{userId},#{orgId},#{createTime},#{modifyTime},#{creatUserId},#{modifyUserId}
        )
    </insert>
    <select id="selectOrgAndUserByOrgIdAndUserId"  parameterType="java.lang.String" resultMap="OrgAndUserresultMap">
       SELECT 
       id,user_id,org_id,create_time,modify_time,create_user_id,modify_user_id
	   FROM platform_user_org where user_id=#{userId} and org_id=#{orgId}
    </select>
    
    <select id="selectUsersByOrgId"  parameterType="java.lang.String" resultMap="OrgAndUserresultMap">
       SELECT 
       id,user_id,org_id,create_time,modify_time,create_user_id,modify_user_id
	   FROM platform_user_org where org_id=#{orgId}
    </select>
    <select id="checkOrgCodeIsExist"  parameterType="java.lang.String" resultType="Integer">
       SELECT 
       count(1)
	   FROM platform_org where org_code=#{orgCode}
    </select>
    <select id="checkOrgNameIsExist"  parameterType="java.lang.String" resultType="Integer">
       SELECT 
       count(1)
	   FROM platform_org where org_name=#{orgname}
    </select>
    
    
 
    <select id="queryAllOrg" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM platform_org
    </select>
    
    <select id="queryOrgByParameters" parameterType="Org" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM platform_org 
	   <where>
	   	<if test="orgId != '' and orgId != null">
	   	 and org_id = #{orgId} 
	   	</if>
	   	<if test="orgCode != '' and orgCode != null">
	   	  and org_code = #{orgCode} 
	   	</if>
	   	<if test="orgname != '' and orgname != null">
	   	  and org_name = #{orgname} 
	   	</if>
	   </where> 
    </select>
    
    
    <select id="queryOrgByOrgId" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM platform_org
	   WHERE org_id = #{orgId}
    </select>
    
    <delete id="deleteOrgByUserIdAndOrgId" parameterType="String">
        DELETE FROM platform_user_org WHERE org_id = #{orgId} and user_id=#{userId}
    </delete>
    
    <delete id="deleteOrgToUserByOrgId" parameterType="String">
        DELETE FROM platform_user_org WHERE org_id = #{orgId} 
    </delete>
    

    <select id="selectOrgChildrenByParentId" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM platform_org
	   WHERE parent_id = #{parentId}
    </select>

    <update id="modifyOrgByOrgId" parameterType="Org">
        UPDATE platform_org
        <set>
            <if test="orgname != null">
                org_name = #{orgname},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="sortNum != null">
                sort_num = #{sortNum},
            </if>
            <if test="orgCode != null">
                org_code = #{orgCode},
            </if>
            <if test="creatUserId != null">
                create_user_id = #{creatUserId},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId}
            </if>
            
        </set>
        WHERE org_id = #{orgId}
    </update>
    
    
    <update id="modifyOrgByOrgIdAndState" parameterType="Org">
        UPDATE platform_org
        <set>
            <if test="state != null">
                state = #{state},
            </if>
        </set>
        WHERE org_id = #{orgId}
    </update>
    
    
    

    <delete id="deleteOrgByOrgId" parameterType="String">
        DELETE FROM platform_org WHERE org_id = #{orgId}
    </delete>
    
    <delete id="deleteOrgByOrgParentId" parameterType="String">
        DELETE FROM platform_org WHERE parent_id = #{parentId}
    </delete>
     
	<!-- 查询总数量 -->
	<select id="queryCount" resultType="long">
		select count(1) from platform_org
	</select>
	
    <!-- 分页查询所有部门列表 -->
    <select id="findOrgsByPage" resultMap="BaseResultMap" >
        SELECT 
       <include refid="Base_Column_List" />
	   FROM platform_org
    </select>
    
    <select id="queryOrgByOrgParentId" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM platform_org
	   WHERE parent_id = #{parentId}
    </select>
    
</mapper>